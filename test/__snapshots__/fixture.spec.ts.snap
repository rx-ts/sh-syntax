// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`parser and printer should format all fixtures: .dockerignore 1`] = `
"*.less.json
*.log
*.tsbuildinfo
.vscode
coverage
dist
node_modules
"
`;

exports[`parser and printer should format all fixtures: .properties 1`] = `
"# THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
# yarn lockfile v1

email admin@1stg.me
lastUpdateCheck 1569943275644
username jounqin
"
`;

exports[`parser and printer should format all fixtures: Dockerfile 1`] = `
"FROM node:lts-alpine as builder

# 安装与编译代码
COPY . /app
WORKDIR /app
RUN yarn --frozen-lockfile \\\\
  && yarn build \\\\
  && find . -name '*.map' -type f -exec rm -f {} \\\\;

# 最终的应用
FROM abiosoft/caddy
COPY --from=builder /app/packages/ufc-host-app/build /srv
EXPOSE 2015
"
`;

exports[`parser and printer should format all fixtures: error.sh 1`] = `[Error: path:1:6: a command can only contain words and redirects; encountered )]`;

exports[`parser and printer should format all fixtures: hosts 1`] = `
"##
# Host Database
#
# localhost is used to configure the loopback interface
# when the system is booting.  Do not change this entry.
##
127.0.0.1 localhost
255.255.255.255 broadcasthost
::1 localhost
# Added by Docker Desktop
# To allow the same kube context to work on the host and the container:
127.0.0.1 kubernetes.docker.internal
# End of section
"
`;

exports[`parser and printer should format all fixtures: jvm.options 1`] = `
"# this is a comment
-mx2048m -XX:MaxPermSize=2048m -Drebel.spring_plugin=true -Drebel.hibernate_plugin=true

idea.cycle.buffer.size = 1024
"
`;

exports[`parser and printer should format all fixtures: no-ext 1`] = `
"#/usr/bin/env sh
echo 'foo'
"
`;

exports[`parser and printer should format all fixtures: shell.sh 1`] = `
"#!/bin/bash
NAME= \\"ufc-web-client\\"

git pull

echo 'start build docker image.'
docker build -t \${NAME}:latest -f ./scripts/docker/Dockerfile .

echo 'stop and remove the current container.'
docker container stop \${NAME}
docker container rm \${NAME}

echo 'run a new container.'
docker run -d --restart always -p 2015:2015 --name \${NAME} \${NAME}:latest
"
`;
